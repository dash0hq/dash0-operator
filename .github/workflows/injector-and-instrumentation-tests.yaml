name: Injector and Instrumentation Tests

on:
  workflow_call:
    secrets:
      github-token:
        description: "GitHub token for authentication"
        required: true

jobs:
  build_image_and_run_injector_tests:
    name: Build Instrumentation Image and Run Injector Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    outputs:
      instrumentation_any_changed: ${{ steps.changed-files.outputs.instrumentation_any_changed }}
      image_name: ${{ steps.instrumentation-test-image.outputs.image_name }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v4
        with:
          fetch-depth: 0

      - name: get branch name
        id: branch-name
        run: |
          # For push events: use GITHUB_REF_NAME, for PRs: use GITHUB_HEAD_REF
          echo "branch_name=${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}" >> $GITHUB_OUTPUT
          # Also set base_ref_branch as it's used in line 25
          echo "base_ref_branch=${GITHUB_BASE_REF:-main}" >> $GITHUB_OUTPUT

      - name: find SHA of last successful workflow run on main branch
        uses: nrwl/nx-set-shas@826660b82addbef3abff5fa871492ebad618c9e1 #v4
        id: last_succsesfull_commit_main_branch
        with:
          # Get the last successful commit on main branch (actually, on the target branch for the PR, but that is
          # usually main).
          main-branch-name: ${{ steps.branch-name.outputs.base_ref_branch }}

      # We use the changed-files action to potentially skip the injector & instrumentation tests on PRs that contain no
      # changes for the instrumentation image. This is because running the tests requires to build the instrumentation
      # image for both arm64 and X86_64, and the cross-platform build is very slow (takes up to 15 minutes). We do
      # always run these steps when building the main branch or a tag though. By default, changed-files would compare
      # against the last non-merge commit on the target branch for pull request events (which is used in PR builds), but
      # together with the nrwl/nx-set-shas step from above we compare against the SHA from the last _successful_ CI
      # workflow run on the main branch.
      - name: compile list of relevant changed files for the instrumentation image
        id: changed-files
        run: |
          # Get the base SHA from last successful commit on main branch
          BASE_SHA="${{ steps.last_succsesfull_commit_main_branch.outputs.base }}"

          if [ -z "$BASE_SHA" ]; then
            echo "Error: No BASE_SHA is available."
            exit 1
          fi
          if [ -z "$GITHUB_SHA" ]; then
            echo "Error: No GITHUB_SHA is available."
            exit 1
          fi

          # Get all changed instrumentation files (|| true to prevent grep from returning non-zero exit code)
          INSTRUMENTATION_FILES=$(git diff --name-only --diff-filter=ACMRTUXB "$BASE_SHA" "$GITHUB_SHA" | grep -E "^images/instrumentation/|.github/workflows/injector-and-instrumentation-tests.yaml" || true)

          # Determine if any instrumentation files changed
          if [ -z "$INSTRUMENTATION_FILES" ]; then
            INSTRUMENTATION_CHANGED="false"
          else
            INSTRUMENTATION_CHANGED="true"
          fi

          # Output the results
          echo "instrumentation_any_changed=$INSTRUMENTATION_CHANGED" >> $GITHUB_OUTPUT
          echo "instrumentation_all_changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$INSTRUMENTATION_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: show changed files
        env:
          INSTRUMENTATION_CHANGED_FILES_FLAG: ${{ steps.changed-files.outputs.instrumentation_any_changed }}
          INSTRUMENTATION_CHANGED_FILES_LIST: ${{ steps.changed-files.outputs.instrumentation_all_changed_files }}
        run: |
          echo "files for instrumentation image have changed: $INSTRUMENTATION_CHANGED_FILES_FLAG"
          echo "changed files for instrumentation image: $INSTRUMENTATION_CHANGED_FILES_LIST"

      - name: set up docker buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 #v3
        if: |
          steps.changed-files.outputs.instrumentation_any_changed == 'true' ||
          github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')

      # Just for building on arm, buildx is enough but doing docker run with --platform=linux/arm64 (which we do when
      # testing the injector binary and the instrumentation image) requires qemu.
      - name: set up qemu
        uses: docker/setup-qemu-action@05340d1c670183e7caabdb33ae9f1c80fae3b0c2 #v3
        if: |
          steps.changed-files.outputs.instrumentation_any_changed == 'true' ||
          github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')

      - name: login to GitHub container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 #v3
        if: |
          steps.changed-files.outputs.instrumentation_any_changed == 'true' ||
          github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.github-token }}

      # To enable running the tests for multiple active branches in parallel without risking conflicts, we use the
      # branch name as part of the image tag. However, we cannot just use the branch name as is, since it may contain
      # characters that are not allowed in image tags (most notably slashes in dependabot PRs). We replace all invalid
      # characters with underscores and use the output of this step as the image tag.
      - name: assemble instrumentation test image name
        id: instrumentation-test-image
        run: |
          export image_tag=$( echo "${{ github.head_ref || github.ref_name }}" | sed 's/[^a-zA-Z0-9_\.\-]/\_/g' )
          echo "image_name=ghcr.io/dash0hq/instrumentation-ci-test:$image_tag" >> $GITHUB_OUTPUT

      - name: build temporary instrumentation image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 #v6
        # Dependabot PRs currently fail in this step, see
        # https://stackoverflow.com/questions/74788092/github-dependabot-doesnt-have-permissions-to-publish-to-ghcr-how-can-i-give-it
        # This can be worked around by ammending the Dependabot commit and force-pushing it, e.g.
        #   git commit --amend --signoff && git push --force-with-lease
        # (The original suspicion was that the HTTP 403 was somehow related to the image tag, but this is purely a
        # Dependabot permission issue.)
        # See also: https://docs.github.com/en/code-security/dependabot
        # Maybe we can also allow Dependabot PRs to dry-run the Helm chart publishing, that is, remove the
        # github.actor != 'dependabot[bot]' condition we have on those steps.
        if: |
          steps.changed-files.outputs.instrumentation_any_changed == 'true' ||
          github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')
        with:
          context: images/instrumentation
          tags: ${{ steps.instrumentation-test-image.outputs.image_name }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,scope=instrumentation
          cache-to: type=gha,mode=max,scope=instrumentation
          push: true

      - name: injector tests
        if: |
          steps.changed-files.outputs.instrumentation_any_changed == 'true' ||
          github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')
        env:
          INSTRUMENTATION_IMAGE: ${{ steps.instrumentation-test-image.outputs.image_name }}
        run: |
          images/instrumentation/injector/test/scripts/test-all.sh

  run_instrumentation_image_tests_x86_64:
    name: Run Instrumentation Image Tests (x86_64)
    needs: build_image_and_run_injector_tests
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '24.x'
          cache: 'npm'
          cache-dependency-path: images/instrumentation/test/package-lock.json

      - name: run instrumentation image tests (x86_64)
        if: |
          needs.build_image_and_run_injector_tests.outputs.instrumentation_any_changed == 'true' ||
          github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')
        working-directory: images/instrumentation/test
        env:
          INSTRUMENTATION_IMAGE: ${{ needs.build_image_and_run_injector_tests.outputs.image_name }}
          ARCHITECTURES: 'x86_64'
        run: |
          npm ci
          npm run test

  run_instrumentation_image_tests_arm64:
    name: Run Instrumentation Image Tests (arm64)
    needs: build_image_and_run_injector_tests
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '24.x'
          cache: 'npm'
          cache-dependency-path: images/instrumentation/test/package-lock.json

      - name: run instrumentation image tests (arm64)
        if: |
          needs.build_image_and_run_injector_tests.outputs.instrumentation_any_changed == 'true' ||
          github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')
        working-directory: images/instrumentation/test
        env:
          INSTRUMENTATION_IMAGE: ${{ needs.build_image_and_run_injector_tests.outputs.image_name }}
          ARCHITECTURES: 'arm64'
        run: |
          npm ci
          npm run test

  clean_up:
    name: clean up instrumentation image test build
    needs:
    - build_image_and_run_injector_tests
    - run_instrumentation_image_tests_x86_64
    - run_instrumentation_image_tests_arm64
    runs-on: ubuntu-latest

    steps:
      - name: delete test image
        uses: bots-house/ghcr-delete-image-action@3827559c68cb4dcdf54d813ea9853be6d468d3a4 #v1.1.0
        if: ${{ always() && ( needs.build_image_and_run_injector_tests.outputs.instrumentation_any_changed == 'true' || github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/') ) }}
        with:
          owner: dash0hq
          name: instrumentation-ci-test
          token: ${{ secrets.github-token }}
          # delete untagged images from this build (and from earlier builds, if there are any leftovers)
          untagged-keep-latest: 1