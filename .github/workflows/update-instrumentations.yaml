name: Update instrumentations

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch: {}  # Manual trigger for testing and schedule override

jobs:
  update-instrumentations-to-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: check-latest-version-opentelemetry-javaagent
        name: Check latest version of the OpenTelemetry Java agent
        uses: mmanciop/check-latest-versions@v2
        with:
          package-manager: github-releases
          package-name: 'open-telemetry/opentelemetry-java-instrumentation'
      - id: check-latest-version-dash0-nodejs-distro
        name: Check latest version of Dash0 Node.js distro
        uses: mmanciop/check-latest-versions@v2
        with:
          package-manager: npm
          package-name: 'dash0hq/opentelemetry-js-distribution'
      - name: Check version file updates
        id: verify
        run: |
          if [ "${{ steps.check-latest-version-opentelemetry-javaagent.outputs.version }}" != $(< images/instrumentation/jvm/version) ]; then
            echo -n "${{ check-latest-version-opentelemetry-javaagent.outputs.version }}" > images/instrumentation/jvm/version
            echo 'otel-java-agent=true' >> $GITHUB_OUTPUT
            echo 'update=true' >> $GITHUB_OUTPUT
          fi
          if [ "${{ steps.check-latest-version-dash0-nodejs-distro.outputs.version }}" != $(jq -jr '.["dependencies"].["@dash0hq/opentelemetry"]' images/instrumentation/node.js/package.json) ]; then
            echo -n $(jq '.["dependencies"].["@dash0hq/opentelemetry"]="${{steps.check-latest-version-dash0-nodejs-distro.outputs.version}}"') > images/instrumentation/node.js/package.json
            echo 'dash0-nodejs-distro=true' >> $GITHUB_OUTPUT
            echo 'update=true' >> $GITHUB_OUTPUT
          fi
          echo 'branch-name=instrumentation-updates' >> $GITHUB_OUTPUT
      - name: Set up git configuration
        if: steps.verify.outputs.update
        run: |
          git config --global user.name "Dash0 Bot"
          git config --global user.email "bot@dash0.com"
      - name: Create update commit for OpenTelemetry Java agent
        if: steps.verify.outputs.otel-java-agent
        run: |
          git add 'images/instrumentation/jvm/version'
          git commit -m 'Update the OpenTelemetry Java agent to version ${{ steps.check-latest-version-opentelemetry-javaagent.outputs.version }}'
          git push --force origin HEAD:${{ steps.verify.outputs.branch-name }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        if: steps.verify.outputs.dash0-nodejs-distro
        with:
          node-version: 21
      - name: Update package lock for Node.js distro
        if: steps.verify.outputs.dash0-nodejs-distro
        run:
          (cd images/instrumentation/node.js && npm install --package-lock-only --ignore-scripts --omit=dev --no-audit --no-fund=true)
      - name: Create update commit for Dash0 Node.js distro
        if: steps.verify.outputs.dash0-nodejs-distro
        run: |
          git add 'images/instrumentation/node.js/package*'
          git commit -m 'Update the Dash0 Node.js distro to version ${{ steps.check-latest-version-dash0-nodejs-distro.outputs.version }}'
          git push --force origin HEAD:${{ steps.verify.outputs.branch-name }}
      - name: Open pull request
        id: open-update-pr
        if: steps.verify.outputs.update
        continue-on-error: true
        uses: mmanciop/pull-request@master
        with:
          source_branch: '${{ steps.verify.outputs.branch-name }}'
          destination_branch: 'main'
          pr_title: 'chore: Update instrumentations'
          pr_body: 'Automated instrumentations update :crown:'
          pr_draft: false
          pr_allow_empty: false
          pr_automerge: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_reviewer: basti1302,mmanciop