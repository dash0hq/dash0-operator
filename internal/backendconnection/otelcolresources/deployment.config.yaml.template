exporters:
{{- if .DevelopmentMode }}
  debug:
    verbosity: detailed
{{- end }}
{{- range $i, $exporter := .Exporters }}
  {{ $exporter.Name }}:
    endpoint: "{{ $exporter.Endpoint }}"
{{ if $exporter.Insecure }}
    tls:
      insecure: true
{{ end }}
{{- if $exporter.Headers }}
    headers:
{{- range $i, $header := $exporter.Headers }}
      "{{ $header.Name }}": "{{ $header.Value }}"
{{- end }}
{{- end }}
{{- if $exporter.Encoding }}
    encoding: "{{ $exporter.Encoding }}"
{{- end }}
{{- end }}

extensions:
  health_check:
    endpoint: ${env:MY_POD_IP}:13133

processors:
  batch: {}

  memory_limiter:
    check_interval: 5s
    limit_percentage: 80
    spike_limit_percentage: 25

  resourcedetection:
    detectors:
    - system
    - eks
    - ecs
    - ec2
    - gcp
    - aks
    - azure
    - k8snode

receivers:
  k8s_cluster: {}
{{- if .ScrapeConfigs }}
  prometheus:
    config:
      scrape_configs:
      - job_name: otel-collector
        scrape_interval: 5s
        static_configs:
          - targets: ['0.0.0.0:8888']
      - job_name: k8s
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          regex: "true"
          action: keep
        metric_relabel_configs:
        - source_labels: [__name__]
          regex: "(request_duration_seconds.*|response_duration_seconds.*)"
          action: keep
{{- end }}

service:
  extensions:
  - health_check

  pipelines:

    metrics/downstream:
      receivers:
      - k8s_cluster
      {{- if .ScrapeConfigs }}
      - prometheus
      {{- end }}
      processors:
      - memory_limiter
      - resourcedetection
      - batch
      exporters:
      {{- if .DevelopmentMode }}
      - debug
      {{- end }}
      {{- range $i, $exporter := .Exporters }}
      - {{ $exporter.Name }}
      {{- end }}

  telemetry:
    metrics:
      address: ${env:MY_POD_IP}:8888