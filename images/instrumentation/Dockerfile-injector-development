# This Dockerfile is intended to serve as a development environment for the injector, i.e. mounting the injector
# directory as a volume to the container and then running the image with `-it` to have a fast feeback cycle when working
# on injector changes. Use ./start-injector-dev-container.sh to build and run the container.
# It also has dependencies to build the JDK (https://github.com/openjdk/jdk) and Node.js
# (https://github.com/nodejs/node) from source, which can be helpful to investigate segfaults or other nasties.
ARG base_image=ubuntu:oracular
FROM ${base_image}

ARG zig_architecture

RUN apt-get update && \
    apt-get install -y unminimize && \
    yes | unminimize && \
    apt-get install -y --no-install-recommends \
      curl \
      ca-certificates \
      && \
    curl -fsSL https://deb.nodesource.com/setup_24.x -o nodesource_setup.sh && \
    /bin/bash nodesource_setup.sh && \
    rm nodesource_setup.sh && \
    apt-get install -y --no-install-recommends \
      autoconf \
      binutils \
      build-essential \
      curl \
      dotnet-sdk-9.0 \
      entr \
      fd-find \
      file \
      gdb \
      less \
      libasound2-dev \
      libcups2-dev \
      libfontconfig1-dev \
      libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev \
      locales \
      man-db \
      manpages-dev \
      manpages-posix \
      manpages-posix-dev \
      nodejs \
      openjdk-21-jdk \
      python3 \
      python3-pip \
      silversearcher-ag \
      unzip \
      vim \
      wget \
      zip \
      && \
    apt-get clean && \
    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG=en_US.utf8

RUN npm config set update-notifier false

# Make fd available as `fd` instead of `fdfind`, see
RUN ln -s $(which fdfind) /usr/local/bin/fd
# See https://github.com/eradman/entr?tab=readme-ov-file#docker-and-wsl
ENV ENTR_INOTIFY_WORKAROUND=true

# required for certain setups to enable LD_DEBUG
RUN touch /etc/suid-debug

RUN mkdir -p /opt/zig
WORKDIR /opt/zig
COPY injector/zig-version .
RUN . /opt/zig/zig-version && \
  wget -q -O /tmp/zig.tar.gz https://ziglang.org/download/${ZIG_VERSION%-*}/zig-${zig_architecture}-linux-${ZIG_VERSION%-*}.tar.xz && \
  tar --strip-components=1 -xf /tmp/zig.tar.gz
ENV PATH="$PATH:/opt/zig"

WORKDIR /home/dash0/instrumentation

CMD ["/bin/bash"]
