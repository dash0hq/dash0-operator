# SPDX-FileCopyrightText: Copyright 2024 Dash0 Inc.
# SPDX-License-Identifier: Apache-2.0

is_remote_image() {
  image_name=${1:-}
  if [[ -z "$image_name" ]]; then
    echo "error: mandatory argument \"image_name\" is missing"
    exit 1
  fi

  if [[ "$image_name" == *"/"* ]]; then
	return 0
  else
	return 1
  fi
}

copy_injector_binary_from_container_image() {
  image_name=${1:-}
  if [[ -z "$image_name" ]]; then
    echo "error: mandatory argument \"image_name\" is missing"
    exit 1
  fi
  arch=${2:-}
  if [[ -z "$arch" ]]; then
    echo "error: mandatory argument \"arch\" is missing"
    exit 1
  fi
  docker_platform=${3:-}
  if [[ -z "$docker_platform" ]]; then
    echo "error: mandatory argument \"docker_platform\" is missing"
    exit 1
  fi

  container_id=$(docker create --platform "$docker_platform" "$image_name")
  docker container cp \
    "$container_id":/dash0-init-container/dash0_injector.so \
    injector/test/bin/dash0_injector_"$arch".so
  docker rm -v "$container_id"
}

cleanup_docker_containers_and_images() {
  echo "cleaning up containers and container images"
  echo containers to be deleted:
  cat injector/test/.containers_to_be_deleted_at_end
  echo container images to be deleted:
  cat injector/test/.container_images_to_be_deleted_at_end

  while IFS= read -r container; do
    if [[ -n "$container" ]]; then
      docker rm -f "$container" || true
    fi
  done < injector/test/.containers_to_be_deleted_at_end

  while IFS= read -r image; do
    if [[ -n "$image" ]]; then
      docker rmi -f "$image" || true
    fi
  done < injector/test/.container_images_to_be_deleted_at_end

  rm injector/test/.containers_to_be_deleted_at_end
  rm injector/test/.container_images_to_be_deleted_at_end
}
