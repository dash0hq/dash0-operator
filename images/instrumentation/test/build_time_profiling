declare -a all_build_step_times

print_time() {
  local t="$1"
  printf '%02dh:%02dm:%02ds\n' $((t/3600)) $((t%3600/60)) $((t%60))
}

store_build_step_duration() {
  local end=$(date +%s)
  local step_label=$1
  local start=$2
  local arch=${3:--}
  local runtime=${4:--}
  local base_image=${5:--}
  local duration=$((end - start))
  all_build_step_times+=("$step_label|$arch|$runtime|$base_image|$duration")
}

print_build_step_duration() {
  local step_label=$1
  local start=$2
  local end=$(date +%s)
  local duration=$((end - start))
  printf "[build time] $step_label:"'\t'"$(print_time "$duration")"'\n'
}

print_total_build_time_info() {
  local total_build_end=$(date +%s)
  local total_build_duration=$((total_build_end - start_time_build))
  local accounted_for_total=0
  echo
  echo "**build step durations (CSV)**"
  echo '"Build Step";"Architecture";"Runtime";"Base Image";"Duration";"Duration (formatted)"'
  for entry in "${all_build_step_times[@]}"; do
    IFS="|" read -r -a entry_parsed <<< "${entry}"
    local step_label=${entry_parsed[0]}
    local arch=${entry_parsed[1]}
    local runtime=${entry_parsed[2]}
    local base_image=${entry_parsed[3]}
    local duration=${entry_parsed[4]}
    echo "\"$step_label\";\"$arch\";\"$runtime\";\"$base_image\";\"$duration\";\"$(print_time "$duration")\""
    accounted_for_total=$((accounted_for_total + duration))
  done
  echo

  echo ----------------------------------------
  echo "**summary**"
  print_build_step_duration "**total build time**" "$start_time_build"

  # check that we are actually measuring all relevant build steps:
  local unaccounted=$((total_build_duration - accounted_for_total))
  printf "[build time] build time accounted for by individual build steps:"'\t'"$(print_time "$accounted_for_total")"'\n'
  printf "[build time] build time unaccounted for by individual build steps:"'\t'"$(print_time "$unaccounted")"'\n'
}

