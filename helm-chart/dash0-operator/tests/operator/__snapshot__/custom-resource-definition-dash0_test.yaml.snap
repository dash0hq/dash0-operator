custom resource definition should match snapshot:
  1: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        cert-manager.io/inject-ca-from: NAMESPACE/dash0-operator-serving-cert
        controller-gen.kubebuilder.io/version: v0.14.0
      name: dash0s.operator.dash0.com
    spec:
      group: operator.dash0.com
      names:
        kind: Dash0
        listKind: Dash0List
        plural: dash0s
        singular: dash0
      scope: Namespaced
      versions:
        - name: v1alpha1
          schema:
            openAPIV3Schema:
              description: Dash0 is the Schema for the dash0s API
              properties:
                apiVersion:
                  description: |-
                    APIVersion defines the versioned schema of this representation of an object.
                    Servers should convert recognized schemas to the latest internal value, and
                    may reject unrecognized values.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                  type: string
                kind:
                  description: |-
                    Kind is a string value representing the REST resource this object represents.
                    Servers may infer this from the endpoint the client submits requests to.
                    Cannot be updated.
                    In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                metadata:
                  type: object
                spec:
                  description: Dash0Spec defines the desired state of the Dash0 custom resource.
                  properties:
                    InstrumentNewWorkloads:
                      description: |-
                        Opt-out for workload instrumentation of newly deployed workloads for the target namespace. You can opt-out of
                        instrumenting workloads at the time they are deployed by setting this option to false. By default, when the Dash0
                        custom resource is present in a namespace (and the Dash0 Kubernetes operator is active), the operator will
                        instrument new workloads to send telemetry to Dash0, at the time they are deployed to that namespace.
                        Setting this option to false will prevent that behavior, but workloads existing when the Dash0 custom resource
                        is deployed will still be instrumented (see option InstrumentExistingWorkloads). More fine-grained control over
                        instrumentation on a per-workload level is available by setting the label dash0.com/enable=false on individual
                        workloads.


                        The default value for this option is true.


                        This option has no effect if InstrumentWorkloads is set to false.
                      type: boolean
                    authorizationToken:
                      description: |-
                        The Dash0 authorization token. This propery is optional, but either this property or the SecretRef property has
                        to be provided. If both are provided, the AuthorizationToken will be used and SecretRef will be ignored. The
                        authorization token for your Dash0 organization can be copied from https://app.dash0.com/settings.
                      type: string
                    ingressEndpoint:
                      description: |-
                        The URL of the observability backend to which telemetry data will be sent. This property is mandatory. The value
                        needs to be the OTLP/gRPC endpoint of your Dash0 organization. The correct OTLP/gRPC endpoint can be copied fom
                        https://app.dash0.com/settings. The correct endpoint value will always start with `ingress.` and end in
                        `dash0.com:4317`.
                      type: string
                    instrumentExistingWorkloads:
                      description: |-
                        Opt-out for workload instrumentation of existing workloads for the target namespace. You can opt-out of
                        instrumenting existing workloads by setting this option to false. By default, when the Dash0 custom resource
                        is deployed to a namespace (and the Dash0 Kubernetes operator is active), the operator will instrument the
                        workloads already running in that namesapce, to send telemetry to Dash0. Setting this option to false will
                        prevent that behavior, but workloads that are deployed after Dash0 custom resource will still be instrumented
                        (see option InstrumentNewWorkloads). More fine-grained control over instrumentation on a per-workload level is
                        available by setting the label dash0.com/enable=false on individual workloads.


                        The default value for this option is true.


                        This option has no effect if InstrumentWorkloads is set to false.
                      type: boolean
                    instrumentWorkloads:
                      description: |-
                        Global opt-out for workload instrumentation for the target namespace. You can opt-out of instrumenting workloads
                        entirely by setting this option to false. By default, this setting is true and Kubernetes workloads will be
                        intrumented by the operator to send telemetry to Dash0. Setting it to false will prevent workload instrumentation
                        in the target namespace. More fine-grained control over instrumentation is available via the settings
                        InstrumentExistingWorkloads, InstrumentNewWorkloads and UninstrumentWorkloadsOnDelete, as well as by setting the
                        label dash0.com/enable=false on individual workloads.


                        The default value for this option is true.
                      type: boolean
                    secretRef:
                      description: |-
                        A reference to a Kubernetes secret containing the Dash0 authorization token. This propery is optional, but either
                        this property or the AuthorizationToken property has to be provided. If both are provided, the AuthorizationToken
                        will be used and SecretRef will be ignored. The authorization token for your Dash0 organization can be copied
                        from https://app.dash0.com/settings.
                      type: string
                    uninstrumentWorkloadsOnDelete:
                      description: |-
                        Opt-out for removing the Dash0 instrumentation from workloads when the Dash0 custom resource is removed from a
                        namespace, or when the Dash0 Kubernetes operator is deleted entirely. By default, this setting is true and the
                        operator will revert the instrumentation modifications it applied to workloads to send telemetry to Dash0.
                        Setting this option to false will prevent this behavior.


                        The default value for this option is true.
                      type: boolean
                  required:
                    - ingressEndpoint
                  type: object
                status:
                  description: Dash0Status defines the observed state of the Dash0 custom resource.
                  properties:
                    conditions:
                      items:
                        description: Condition contains details for one aspect of the current state of this resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      type: array
                  type: object
              type: object
          served: true
          storage: true
          subresources:
            status: {}
