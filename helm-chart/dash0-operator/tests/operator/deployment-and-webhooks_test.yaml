suite: test deployment
templates:
  - operator/deployment-and-webhooks.yaml
tests:
  - it: secret should contain ca and cert
    documentSelector:
      path: metadata.name
      value: dash0-operator-certificates
    asserts:
      - isNotNullOrEmpty:
          path: data["ca.crt"]
      - isNotNullOrEmpty:
          path: data["tls.crt"]
      - isNotNullOrEmpty:
          path: data["tls.key"]

  - it: deployment should match snapshot (default values)
    documentSelector:
      path: metadata.name
      value: dash0-operator-controller
    asserts:
      - matchSnapshot: {}

  - it: deployment image tags should default to appVersion
    chart:
      version: 4.5.6
      appVersion: 99.100.101
    documentSelector:
      path: metadata.name
      value: dash0-operator-controller
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/dash0hq/operator-controller:99.100.101
      - equal:
          path: spec.template.spec.containers[0].env[3].name
          value: DASH0_OPERATOR_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[3].value
          value: ghcr.io/dash0hq/operator-controller:99.100.101
      - equal:
          path: spec.template.spec.containers[0].env[4].name
          value: DASH0_INIT_CONTAINER_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[4].value
          value: ghcr.io/dash0hq/instrumentation:99.100.101
      - equal:
          path: spec.template.spec.containers[0].env[5].name
          value: DASH0_COLLECTOR_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[5].value
          value: ghcr.io/dash0hq/collector:99.100.101
      - equal:
          path: spec.template.spec.containers[0].env[6].name
          value: DASH0_CONFIGURATION_RELOADER_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[6].value
          value: ghcr.io/dash0hq/configuration-reloader:99.100.101

  - it: should render deployment with custom settings
    documentSelector:
      path: metadata.name
      value: dash0-operator-controller
    set:
      operator:
        additionalLabels:
          label1: "value 1"
          label2: "value 2"
        deploymentAnnotations:
          annotation1: "value 1"
          annotation2: "value 2"
        replicaCount: 3
        podAnnotations:
          annotation1: "value 1"
          annotation2: "value 2"
        podLabels:
          label1: "value 1"
          label2: "value 2"
        image:
          repository: custom-operator-image
          tag: "1.2.3"
          pullPolicy: Never
        initContainerImage:
          repository: custom-init-container-image
          tag: "4.5.6"
          pullPolicy: Always
        imagePullSecrets:
          - name: regcred
          - name: anotherSecret
        collectorImage:
          repository: custom-collector-image
          tag: "7.8.9"
          pullPolicy: Never
        configurationReloaderImage:
          repository: custom-configuration-reloader-image
          tag: "10.11.12"
          pullPolicy: Always
        filelogOffsetSynchImage:
          repository: custom-filelog-offset-synch-image
          tag: "13.14.15"
          pullPolicy: Never
        managerContainerResources:
          limits:
            cpu: 123m
            memory: 456Mi
          requests:
            cpu: 5m
            memory: 32Mi
        developmentMode: true
    asserts:
      - equal:
          path: metadata.labels['label1']
          value: "value 1"
      - equal:
          path: metadata.labels['label2']
          value: "value 2"
      - equal:
          path: metadata.annotations['annotation1']
          value: "value 1"
      - equal:
          path: metadata.annotations['annotation2']
          value: "value 2"
      - equal:
          path: spec.replicas
          value: 3
      - equal:
          path: spec.template.metadata.annotations['annotation1']
          value: "value 1"
      - equal:
          path: spec.template.metadata.annotations['annotation2']
          value: "value 2"
      - equal:
          path: spec.template.metadata.labels['label1']
          value: "value 1"
      - equal:
          path: spec.template.metadata.labels['label2']
          value: "value 2"
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: regcred
      - equal:
          path: spec.template.spec.imagePullSecrets[1].name
          value: anotherSecret
      - equal:
          path: spec.template.spec.containers[0].image
          value: custom-operator-image:1.2.3
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Never
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: DASH0_OPERATOR_NAMESPACE
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: DASH0_DEPLOYMENT_NAME
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: dash0-operator-controller
      - equal:
          path: spec.template.spec.containers[0].env[2].name
          value: OTEL_COLLECTOR_NAME_PREFIX
      - equal:
          path: spec.template.spec.containers[0].env[2].value
          value: RELEASE-NAME
      - equal:
          path: spec.template.spec.containers[0].env[3].name
          value: DASH0_OPERATOR_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[3].value
          value: custom-operator-image:1.2.3
      - equal:
         path: spec.template.spec.containers[0].env[4].name
         value: DASH0_INIT_CONTAINER_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[4].value
          value: custom-init-container-image:4.5.6
      - equal:
          path: spec.template.spec.containers[0].env[5].name
          value: DASH0_INIT_CONTAINER_IMAGE_PULL_POLICY
      - equal:
          path: spec.template.spec.containers[0].env[5].value
          value: Always
      - equal:
          path: spec.template.spec.containers[0].env[6].name
          value: DASH0_COLLECTOR_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[6].value
          value: custom-collector-image:7.8.9
      - equal:
          path: spec.template.spec.containers[0].env[7].name
          value: DASH0_COLLECTOR_IMAGE_PULL_POLICY
      - equal:
          path: spec.template.spec.containers[0].env[7].value
          value: Never
      - equal:
          path: spec.template.spec.containers[0].env[8].name
          value: DASH0_CONFIGURATION_RELOADER_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[8].value
          value: custom-configuration-reloader-image:10.11.12
      - equal:
          path: spec.template.spec.containers[0].env[9].name
          value: DASH0_CONFIGURATION_RELOADER_IMAGE_PULL_POLICY
      - equal:
          path: spec.template.spec.containers[0].env[9].value
          value: Always
      - equal:
          path: spec.template.spec.containers[0].env[10].name
          value: DASH0_FILELOG_OFFSET_SYNCH_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[10].value
          value: custom-filelog-offset-synch-image:13.14.15
      - equal:
          path: spec.template.spec.containers[0].env[11].name
          value: DASH0_FILELOG_OFFSET_SYNCH_IMAGE_PULL_POLICY
      - equal:
          path: spec.template.spec.containers[0].env[11].value
          value: Never
      - equal:
          path: spec.template.spec.containers[0].env[12].name
          value: DASH0_DEVELOPMENT_MODE
      - equal:
          path: spec.template.spec.containers[0].env[12].value
          value: "true"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 123m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 456Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 5m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 32Mi

  - it: should add args for creating an operator configuration resource with a token to deployment
    documentSelector:
      path: metadata.name
      value: dash0-operator-controller
    set:
      operator:
        dash0Export:
          enabled: true
          endpoint: https://ingress.dash0.com
          token: "very-secret-dash0-auth-token"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args[3]
          value: --operator-configuration-endpoint=https://ingress.dash0.com
      - equal:
          path: spec.template.spec.containers[0].args[4]
          value: --operator-configuration-token=very-secret-dash0-auth-token
  # Note: We deliberately do not have a test for the operator.dash0Export.secretRef variant, since this would trigger
  # a check whether the secret actually exists in the cluster, which of course would fail when runnig helm chart unit
  # tests.

  - it: should render the "dash0.com/cert-digest" label
    documentSelector:
      path: metadata.name
      value: dash0-operator-controller
    asserts:
      - isNotNullOrEmpty:
          path: spec.template.metadata.labels["dash0.com/cert-digest"]

  - it: deployment should support referencing images by digest instead of tag
    documentSelector:
      path: metadata.name
      value: dash0-operator-controller
    set:
      operator:
        image:
          digest: sha256:e05496f5bcc3c2caf7d2a2944bfc084872d69dd1e9c365a521719c5bbcf4430c
        initContainerImage:
          digest: sha256:1e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda01
        collectorImage:
          digest: sha256:2e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda02
        configurationReloaderImage:
          digest: sha256:3e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda03
        filelogOffsetSynchImage:
          digest: sha256:4e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda04
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/dash0hq/operator-controller@sha256:e05496f5bcc3c2caf7d2a2944bfc084872d69dd1e9c365a521719c5bbcf4430c
      - notExists:
          path: spec.template.spec.containers[0].imagePullPolicy
      - equal:
          path: spec.template.spec.containers[0].env[3].name
          value: DASH0_OPERATOR_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[3].value
          value: ghcr.io/dash0hq/operator-controller@sha256:e05496f5bcc3c2caf7d2a2944bfc084872d69dd1e9c365a521719c5bbcf4430c
      - equal:
          path: spec.template.spec.containers[0].env[4].name
          value: DASH0_INIT_CONTAINER_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[4].value
          value: ghcr.io/dash0hq/instrumentation@sha256:1e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda01
      - equal:
          path: spec.template.spec.containers[0].env[5].name
          value: DASH0_COLLECTOR_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[5].value
          value: ghcr.io/dash0hq/collector@sha256:2e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda02
      - equal:
          path: spec.template.spec.containers[0].env[6].name
          value: DASH0_CONFIGURATION_RELOADER_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[6].value
          value: ghcr.io/dash0hq/configuration-reloader@sha256:3e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda03
      - equal:
          path: spec.template.spec.containers[0].env[7].name
          value: DASH0_FILELOG_OFFSET_SYNCH_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[7].value
          value: ghcr.io/dash0hq/filelog-offset-synch@sha256:4e8c25853217c7393dbd95e17fe2117bb31b39478bbea4479cc5e7c1257dda04
      - equal:
          path: spec.template.spec.containers[0].env[8].name
          value: K8S_NODE_NAME
      - equal:
          path: spec.template.spec.containers[0].env[9].name
          value: K8S_POD_UID
      - notExists:
          path: spec.template.spec.containers[0].env[10].name

  - it: mutating webhook should have caBundle set
    documentSelector:
      path: metadata.name
      value: dash0-operator-injector
    asserts:
      - isNotNullOrEmpty:
          path: webhooks[0].clientConfig.caBundle

  - it: mutating webhook should have caBundle set also with custom settings
    documentSelector:
      path: metadata.name
      value: dash0-operator-injector
    set:
      operator:
        webhookPort: 554
    asserts:
      - isNotNullOrEmpty:
          path: webhooks[0].clientConfig.caBundle

  - it: validating webhook for operator configuration resource should have caBundle set
    documentSelector:
      path: metadata.name
      value: dash0-operator-operator-configuration-validator
    asserts:
      - isNotNullOrEmpty:
          path: webhooks[0].clientConfig.caBundle

  - it: validating webhook for operator configuration resource should have caBundle set also with custom settings
    documentSelector:
      path: metadata.name
      value: dash0-operator-operator-configuration-validator
    set:
      operator:
        webhookPort: 554
    asserts:
      - isNotNullOrEmpty:
          path: webhooks[0].clientConfig.caBundle

  - it: validating webhook for monitoring resource should have caBundle set
    documentSelector:
      path: metadata.name
      value: dash0-operator-monitoring-validator
    asserts:
      - isNotNullOrEmpty:
          path: webhooks[0].clientConfig.caBundle

  - it: validating webhook for monitoring resource should have caBundle set also with custom settings
    documentSelector:
      path: metadata.name
      value: dash0-operator-monitoring-validator
    set:
      operator:
        webhookPort: 554
    asserts:
      - isNotNullOrEmpty:
          path: webhooks[0].clientConfig.caBundle

  - it: webhook service should render the "dash0.com/cert-digest" label
    documentSelector:
      path: metadata.name
      value: dash0-operator-webhook-service
    asserts:
      - isNotNullOrEmpty:
          path: spec.selector["dash0.com/cert-digest"]

  - it: webhook service should match snapshot (default settings)
    documentSelector:
      path: metadata.name
      value: dash0-operator-webhook-service
    asserts:
      - matchSnapshot: {}

  - it: should render webhook service with custom settings
    documentSelector:
      path: metadata.name
      value: dash0-operator-webhook-service
    set:
      operator:
        webhookPort: 554
    asserts:
      - isNotNullOrEmpty:
          path: spec.selector["dash0.com/cert-digest"]
      - equal:
          path: spec.ports[0].port
          value: 554

  - it: metrics service should match snapshot (default settings)
    documentSelector:
      path: metadata.name
      value: dash0-operator-metrics
    asserts:
      - matchSnapshot: {}

  - it: should render metrics service with custom settings
    documentSelector:
      path: metadata.name
      value: dash0-operator-metrics
    set:
      operator:
        metricsPort: 9554
    asserts:
      - isNotNullOrEmpty:
          path: spec.selector["dash0.com/cert-digest"]
      - equal:
          path: spec.ports[0].port
          value: 9554
