apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dash0-operator.chartName" . }}-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    {{- include "dash0-operator.labels" . | nindent 4 }}
    control-plane: controller-manager
    dash0.com/enable: "false"
  {{- with .Values.operator.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.operator.replicaCount }}
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- if .Values.operator.podAnnotations }}
        {{- include "dash0-operator.podAnnotations" . | nindent 8 }}
        {{- end }}
      labels:
        control-plane: controller-manager
        {{- if .Values.operator.podLabels }}
        {{- include "dash0-operator.podLabels" . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: manager
        image: {{ include "dash0-operator.image" . | quote }}
        {{- if .Values.operator.image.pullPolicy }}
        imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
        {{- end }}
        command:
        - /manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        env:
        - name: DASH0_OTEL_COLLECTOR_BASE_URL
          {{/*
          Note: This reuses an internal template of the opentelmetry-collector Helm chart, to make sure we render the
          exact same service name for the collector URL as the collector Helm chart does. This might need to be updated
          if the collector Helm chart changes its service name template. Since we control the version of the collector
          Helm chart we use and run rigorous tests when updating to a newer version, this approach should be safe.
          */}}
          {{ $collectorSubChartValues :=
               dict
                 "Values" (index .Values "opentelemetry-collector")
                 "Chart" (dict "Name" "opentelemetry-collector")
                 "Release" .Release
          }}
          value: http://{{ include "opentelemetry-collector.fullname" $collectorSubChartValues }}.{{ .Release.Namespace }}.svc.cluster.local:4318
        - name: DASH0_OPERATOR_IMAGE
          value: {{ include "dash0-operator.image" . | quote }}
        - name: DASH0_INIT_CONTAINER_IMAGE
          value: {{ include "dash0-operator.initContainerImage" . | quote }}
        {{- if .Values.operator.initContainerImage.pullPolicy }}
        - name: DASH0_INIT_CONTAINER_IMAGE_PULL_POLICY
          value: {{ .Values.operator.initContainerImage.pullPolicy }}
        {{- end }}
        {{- if .Values.operator.developmentMode }}
        - name: DASH0_DEVELOPMENT_MODE
          value: {{ .Values.operator.developmentMode | toString | quote }}
        {{- end }}
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          {{- toYaml .Values.operator.managerPodResources | nindent 10 }}
        {{ include "dash0-operator.restrictiveContainerSecurityContext" . | nindent 8 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      - name: kube-rbac-proxy
        image: quay.io/brancz/kube-rbac-proxy:v0.18.0
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          {{- toYaml .Values.operator.kubeRbacProxyPodResources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- with .Values.operator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ template "dash0-operator.serviceAccountName" . }}
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
