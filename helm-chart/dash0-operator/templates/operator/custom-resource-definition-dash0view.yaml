---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dash0views.operator.dash0.com
spec:
  group: operator.dash0.com
  names:
    kind: Dash0View
    listKind: Dash0ViewList
    plural: dash0views
    singular: dash0view
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dash0View is the schema for the Dash0View API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            default:
              instrumentWorkloads: all
              prometheusScrapingEnabled: true
            description: |-
              Dash0ViewSpec describes the details of a view. Views can be used as presents within the tracing, logging
              and other areas to filter down available telemetry.
            type: object
            properties:
              type:
                description: |
                  Views can exist in a variety of locations within the Dash0. The type defines
                  where the view can be used, and consequently where it would appear as a selectable
                  option.
                type: string
                enum:
                  - resources
                  - spans
                  - logs
                  - metrics
                  - failed_checks
              display:
                properties:
                  name:
                    description: |
                      Short-form name for the view to be shown prominently within the view list and atop
                      the screen when the view is selected.
                    type: string
                  description:
                    description: |
                      Long-form explanation what the view is doing. Shown within the list of views to help
                      team members understand the purpose of the view.
                    type: string
                  folder:
                    description: |
                      The name of the folder in which the view is located. For example, if
                      the view is located in the root folder, this field will be an empty array.

                      A view can only be located within a single folder. However, it can be nested.
                      Meaning, a value such as `["Shop", "Checkout"]` describes that the view is
                      residing within a folder called `Checkout` and that folder is within a folder called
                      `Shop`.
                    type: array
                    items:
                      type: string
                required:
                  - name
              permissions:
                description: |
                  Defines the possible actions users can take that have a certain role.
                type: array
                items:
                  properties:
                    role:
                      type: string
                      enum:
                        - admin
                        - basic_member
                    actions:
                      description: |
                        Outlines possible actions that matching users can take with this view.
                      type: array
                      items:
                        $ref: '#/components/schemas/ViewAction'
                  required:
                    - actions
              filter:
                description: |
                  The filter for the whole view.
                type: object
            required:
              - type
              - display
              - permissions
          status:
            description: Dash0ViewStatus defines the observed state of the Dash0View resource.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current state of this resource."
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}