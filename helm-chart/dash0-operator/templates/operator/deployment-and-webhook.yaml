{{- /*
   * Helm does not have a way to share generated values between files.
   * And it does _actually_ create resources in pre-install / pre-upgrade hooks
   * before rendering the rest of the chart. So, we do not have another way to
   * generate a self-signed cert and use it across deployment, webhook and service
   * other than lumping all these resourceds in the same file.
  */ -}}
{{- $altNames := list ( printf "%s-injector.%s.svc" (include "dash0-operator.chartName" . ) .Release.Namespace ) ( printf "%s-metrics.%s.svc" (include "dash0-operator.chartName" . ) .Release.Namespace ) -}}
{{- $ca := genCA "dash0-operator-ca" 365 -}}
{{- $cert := genSignedCert ( include "dash0-operator.chartName" . ) nil $altNames 365 $ca -}}
{{- /*
   * On upgrade, we want to avoid the injector service from routing to older
   * pod, which will use a different certificate. Therefore, we add a digest
   * of the cert as a label of the controller pods, which we can use in service
   * selector to ensure routing to the newer controller pods.
   */ -}}
{{- $certFingerprint := $cert.Cert | b64enc | substr 10 25 | quote }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ include "dash0-operator.chartName" . }}-certificates
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: certificates
    app.kubernetes.io/instance: secret
data:
  ca.crt: {{ $ca.Cert | b64enc }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dash0-operator.deploymentName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: deployment
    {{- include "dash0-operator.labels" . | nindent 4 }}
    dash0.com/enable: "false"
  {{- with .Values.operator.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.operator.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: dash0-operator
      app.kubernetes.io/component: controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- if .Values.operator.podAnnotations }}
        {{- include "dash0-operator.podAnnotations" . | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: dash0-operator
        app.kubernetes.io/component: controller
        dash0.com/cert-digest: {{ $certFingerprint }}
        {{- if .Values.operator.podLabels }}
        {{- include "dash0-operator.podLabels" . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: manager
        image: {{ include "dash0-operator.image" . | quote }}
        {{- if .Values.operator.image.pullPolicy }}
        imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
        {{- end }}
        command:
        - /manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        env:
        - name: DASH0_OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DASH0_DEPLOYMENT_NAME
          value: {{ include "dash0-operator.deploymentName" . }}
        - name: OTEL_COLLECTOR_NAME_PREFIX
          value: {{ .Release.Name | quote }}
        - name: DASH0_OPERATOR_IMAGE
          value: {{ include "dash0-operator.image" . | quote }}
        - name: DASH0_INIT_CONTAINER_IMAGE
          value: {{ include "dash0-operator.initContainerImage" . | quote }}
        {{- if .Values.operator.initContainerImage.pullPolicy }}
        - name: DASH0_INIT_CONTAINER_IMAGE_PULL_POLICY
          value: {{ .Values.operator.initContainerImage.pullPolicy }}
        {{- end }}
        - name: DASH0_COLLECTOR_IMAGE
          value: {{ include "dash0-operator.collectorImage" . | quote }}
        {{- if .Values.operator.collectorImage.pullPolicy }}
        - name: DASH0_COLLECTOR_IMAGE_PULL_POLICY
          value: {{ .Values.operator.collectorImage.pullPolicy }}
        {{- end }}
        - name: DASH0_CONFIGURATION_RELOADER_IMAGE
          value: {{ include "dash0-operator.configurationReloaderImage" . | quote }}
        {{- if .Values.operator.configurationReloaderImage.pullPolicy }}
        - name: DASH0_CONFIGURATION_RELOADER_IMAGE_PULL_POLICY
          value: {{ .Values.operator.configurationReloaderImage.pullPolicy }}
        {{- end }}
        - name: DASH0_FILELOG_OFFSET_SYNCH_IMAGE
          value: {{ include "dash0-operator.filelogOffsetSynchImage" . | quote }}
        {{- if .Values.operator.filelogOffsetSynchImage.pullPolicy }}
        - name: DASH0_FILELOG_OFFSET_SYNCH_IMAGE_PULL_POLICY
          value: {{ .Values.operator.filelogOffsetSynchImage.pullPolicy }}
        {{- end }}
        {{- if not .Values.operator.enableWebhook }}
        - name: ENABLE_WEBHOOK
          value: "false"
        {{- end }}
        {{- if .Values.operator.developmentMode }}
        - name: DASH0_DEVELOPMENT_MODE
          value: {{ .Values.operator.developmentMode | toString | quote }}
        {{- end }}
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          {{- toYaml .Values.operator.managerPodResources | nindent 10 }}
        {{ include "dash0-operator.restrictiveContainerSecurityContext" . | nindent 8 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: certificates
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      - name: kube-rbac-proxy
        image: quay.io/brancz/kube-rbac-proxy:v0.18.0
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          {{- toYaml .Values.operator.kubeRbacProxyPodResources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- with .Values.operator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ template "dash0-operator.serviceAccountName" . }}
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: certificates
        secret:
          defaultMode: 420
          secretName: {{ include "dash0-operator.chartName" . }}-certificates
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "dash0-operator.chartName" . }}-injector
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: injector
    app.kubernetes.io/instance: mutating-webhook-service
    {{- include "dash0-operator.labels" . | nindent 4 }}
spec:
  ports:
  - port: {{ .Values.operator.webhookPort }}
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    dash0.com/cert-digest: {{ $certFingerprint }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ template "dash0-operator.chartName" . }}-injector
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: injector
    app.kubernetes.io/instance: mutating-webhook
    {{- include "dash0-operator.labels" . | nindent 4 }}
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: {{ default "" ( $ca.Cert | b64enc ) }}
    service:
      name: {{ template "dash0-operator.chartName" . }}-injector
      namespace: {{ .Release.Namespace }}
      path: /v1alpha1/inject/dash0
  failurePolicy: Ignore
  name: inject.dash0.kb.io
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cronjobs
  - apiGroups:
      - batch
    apiVersions:
      - v1
    operations:
      # do not listen to UPDATE for jobs, we cannot revert instrumentation or do anything on UPDATE requests, since jobs
      # are immutable
      - CREATE
    resources:
      - jobs
  - apiGroups: [""]
    apiVersions:
    - v1
    operations:
    # do not listen to UPDATE for pods, we cannot revert instrumentation or do anything on UPDATE requests, since pods
    # are effectively immutable (we cannot restart ownerless pods)
      - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "dash0-operator.chartName" . }}-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: metrics-service
    {{- include "dash0-operator.labels" . | nindent 4 }}
  {{- with .Values.operator.serviceAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ports:
  - name: https
    port: {{ .Values.operator.metricsPort }}
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    dash0.com/cert-digest: {{ $certFingerprint }}
